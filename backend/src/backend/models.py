# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2023-04-27T08:38:30+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Sprites(BaseModel):
    front_default: Optional[str] = None


class Type1(BaseModel):
    name: Optional[str] = None


class Type(BaseModel):
    type: Optional[Type1] = None
    slot: Optional[float] = None


class Pokemon(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    sprites: Optional[Sprites] = None
    types: Optional[List[Type]] = None


class Sprites1(BaseModel):
    front_default: Optional[str] = None
    front_female: Optional[str] = None
    front_shiny: Optional[str] = None
    front_shiny_female: Optional[str] = None
    back_default: Optional[str] = None
    back_female: Optional[str] = None
    back_shiny: Optional[str] = None
    back_shiny_female: Optional[str] = None


class Type2(BaseModel):
    type: Optional[str] = None
    slot: Optional[float] = None


class VersionGroupDetail(BaseModel):
    move_learn_method: Optional[str] = None
    version_group: Optional[str] = None
    level_learned_at: Optional[float] = None


class Move(BaseModel):
    move: Optional[str] = None
    version_group_details: Optional[List[VersionGroupDetail]] = None


class Stat(BaseModel):
    stat: Optional[str] = None
    base_stat: Optional[float] = None
    effort: Optional[float] = None


class Ability(BaseModel):
    ability: Optional[str] = None
    is_hidden: Optional[bool] = None
    slot: Optional[float] = None


class PokemonDetails(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    sprites: Optional[Sprites1] = None
    types: Optional[List[Type2]] = None
    height: Optional[float] = None
    weight: Optional[float] = None
    moves: Optional[List[Move]] = None
    order: Optional[float] = None
    species: Optional[str] = None
    stats: Optional[List[Stat]] = None
    abilities: Optional[List[Ability]] = None
    form: Optional[str] = None


class Team(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    pokemons: Optional[List[int]] = None


class User(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None
    email: Optional[str] = None
    password: Optional[str] = None
    created_at: Optional[datetime] = None
    updated_at: Optional[datetime] = None


class Error(BaseModel):
    error: Optional[str] = None
    error_message: Optional[str] = None


class Sort(Enum):
    name_asc = 'name-asc'
    name_desc = 'name-desc'
    id_asc = 'id-asc'
    id_desc = 'id-desc'


class Sort1(Enum):
    name_asc = 'name-asc'
    name_desc = 'name-desc'
    id_asc = 'id-asc'
    id_desc = 'id-desc'


class ApiV1TeamsPostRequest(BaseModel):
    name: Optional[str] = None


class ApiV1TeamsIdPostRequest(BaseModel):
    pokemons: Optional[List[int]] = None


class Sort2(Enum):
    name_asc = 'name-asc'
    name_desc = 'name-desc'
    id_asc = 'id-asc'
    id_desc = 'id-desc'


class Metadata(BaseModel):
    next: Optional[str] = Field(None, description='Next page url')
    previous: Optional[str] = Field(None, description='Previous page url')
    total: Optional[int] = Field(None, description='Total number of pokemons')
    pages: Optional[int] = Field(None, description='Number of pages')
    page: Optional[int] = Field(None, description='Current page')


class ApiV2PokemonsGetResponse(BaseModel):
    data: Optional[List[Pokemon]] = None
    metadata: Optional[Metadata] = None


class Sort3(Enum):
    name_asc = 'name-asc'
    name_desc = 'name-desc'
    id_asc = 'id-asc'
    id_desc = 'id-desc'
